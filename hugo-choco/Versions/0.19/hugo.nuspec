<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->
<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->
<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces 
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements 
-->
<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>hugo</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>0.19</version>
    <!-- <packageSourceUrl>Where is this Chocolatey package located (think GitHub)? packageSourceUrl is highly recommended for the community feed</packageSourceUrl>-->
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <!--<owners>__REPLACE_YOUR_NAME__</owners>-->
    <!-- ============================== -->
    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>hugo</title>
    <authors>spf13</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>http://gohugo.io/</projectUrl>
    <iconUrl>https://github.com/spf13/hugo/raw/master/docs/static/img/hugo-logo-med.png</iconUrl>
    <!-- <copyright>Year Software Vendor</copyright> -->
    <!-- If there is a license Url available, it is is required for the community feed -->
    <!-- <licenseUrl>Software License Location __REMOVE_OR_FILL_OUT__</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>-->
    <!--<projectSourceUrl>Software Source Location - is the software FOSS somewhere? Link to it with this</projectSourceUrl>-->
    <!--<docsUrl>At what url are the software docs located?</docsUrl>-->
    <!--<mailingListUrl></mailingListUrl>-->
    <!--<bugTrackerUrl></bugTrackerUrl>-->
    <tags>hugo admin blog website network</tags>
    <summary>A Fast and Flexible Static Site Generator built with love in GoLang</summary>
    <description>![Hugo](https://raw.githubusercontent.com/spf13/hugo/master/docs/static/img/hugo-logo.png)

A Fast and Flexible Static Site Generator built with love by [spf13](http://spf13.com/) and [friends](https://github.com/spf13/hugo/graphs/contributors) in [Go](https://golang.org/).

[Website](https://gohugo.io) |
[Forum](https://discuss.gohugo.io) |
[Developer Chat (no support)](https://gitter.im/spf13/hugo) |
[Documentation](https://gohugo.io/overview/introduction/) |
[Installation Guide](https://gohugo.io/overview/installing/) |
[Contribution Guide](CONTRIBUTING.md) |
[Twitter](http://twitter.com/spf13)

[![GoDoc](https://godoc.org/github.com/spf13/hugo?status.svg)](https://godoc.org/github.com/spf13/hugo)
[![Linux and OS X Build Status](https://api.travis-ci.org/spf13/hugo.svg?branch=master&amp;label=Linux+and+OS+X+build "Linux and OS X Build Status")](https://travis-ci.org/spf13/hugo)
[![Windows Build Status](https://ci.appveyor.com/api/projects/status/n2mo912b8s2505e8/branch/master?svg=true&amp;label=Windows+build "Windows Build Status")](https://ci.appveyor.com/project/spf13/hugo/branch/master)
[![Dev chat at https://gitter.im/spf13/hugo](https://img.shields.io/badge/gitter-developer_chat-46bc99.svg)](https://gitter.im/spf13/hugo?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge)
[![Go Report Card](https://goreportcard.com/badge/github.com/spf13/hugo)](https://goreportcard.com/report/github.com/spf13/hugo)

## Overview

Hugo is a static HTML and CSS website generator written in [Go][].
It is optimized for speed, easy use and configurability.
Hugo takes a directory with content and templates and renders them into a full HTML website.

Hugo relies on Markdown files with front matter for meta data.
And you can run Hugo from any directory.
This works well for shared hosts and other systems where you don’t have a privileged account.

Hugo renders a typical website of moderate size in a fraction of a second.
A good rule of thumb is that each piece of content renders in around 1 millisecond.

Hugo is designed to work well for any kind of website including blogs, tumbles and docs.

## Contributing to Hugo

We welcome contributions to Hugo of any kind including documentation, themes,
organization, tutorials, blog posts, bug reports, issues, feature requests,
feature implementations, pull requests, answering questions on the forum,
helping to manage issues, etc.

The Hugo community and maintainers are [very active](https://github.com/spf13/hugo/pulse/monthly) and helpful, and the project benefits greatly from this activity.

### Asking Support Questions

We have an active [discussion forum](http://discuss.gohugo.io) where users and developers can ask questions.
Please don't use the Github issue tracker to ask questions.

### Reporting Issues

If you believe you have found a defect in Hugo or its documentation, use
the Github issue tracker to report the problem to the Hugo maintainers.
If you're not sure if it's a bug or not, start by asking in the [discussion forum](http://discuss.gohugo.io).
When reporting the issue, please provide the version of Hugo in use (`hugo version`).

[![Analytics](https://ga-beacon.appspot.com/UA-7131036-6/hugo/readme)](https://github.com/igrigorik/ga-beacon)

</description>
    <!-- <releaseNotes>__REPLACE_OR_REMOVE__MarkDown_Okay</releaseNotes> -->
    <!-- =============================== -->
    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <!--<dependencies>
      <dependency id="" version="__MINIMUM_VERSION__" />
      <dependency id="" version="[__EXACT_VERSION__]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" />
      <dependency id="" />
      <dependency id="chocolatey-uninstall.extension" />
    </dependencies>-->
    <!-- chocolatey-uninstall.extension - If supporting 0.9.9.x (or below) and including a chocolateyUninstall.ps1 file to uninstall an EXE/MSI, you probably want to include chocolatey-uninstall.extension as a dependency. Please verify whether you are using a helper function from that package. -->
    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
    <owners>chantisnake</owners>
    <docsUrl>https://github.com/spf13/hugo/wikis</docsUrl>
    <releaseNotes># **0.19** February 27th 2017

We’re happy to announce the first release of Hugo in 2017.

This release represents **over 180 contributions by over 50 contributors** to the main Hugo code base. Since last release Hugo has **gained 1450 stars, 35 new contributors and 15 additional themes.**

Hugo now has:

*   15200+ stars
*   470+ contributors
*   151+ themes

Furthermore, Hugo has its own Twitter account ([@gohugoio](https://twitter.com/gohugoio)) where we share bite-sized news and themes from the Hugo community.

[@bep](//github.com/bep) leads the Hugo development and once again contributed a significant amount of additions. Also a big shoutout to [@chaseadamsio](//github.com/chaseadamsio) for the Emacs Org-mode support, [@digitalcraftsman](//github.com/digitalcraftsman) for his relentless work on keeping the documentation and the themes site in pristine condition, [@fj](//github.com/fj) for his work on revising the `params` handling in Hugo, and [@moorereason](//github.com/moorereason) and [@bogem](//github.com/bogem) for their ongoing contributions.

## Highlights

Hugo `0.19` brings native Emacs Org-mode content support ( [#1483](//github.com/spf13/hugo/issues/1483) ), big thanks to [@chaseadamsio](//github.com/chaseadamsio).

Also, a considerably amount of work have been put into cleaning up the Hugo source code, in an issue titled [Refactor the globals out of site build](https://github.com/spf13/hugo/issues/2701). This is not immediately visible to the Hugo end user, but will speed up future development.

Hugo `0.18` was bringing full-parallel page rendering, so workarounds depending on rendering order did not work anymore, and pages with duplicate target paths (common examples would be `/index.md` or `/about/index.md`) would now conflict with the home page or the section listing.

With Hugo `0.19`, you can control this behaviour by turning off page types you do not want ( [#2534](//github.com/spf13/hugo/issues/2534) ). In its most extreme case, if you put the below setting in your `config.toml`, you will get **nothing!**:

    disableKinds = ["page", "home", "section", "taxonomy", "taxonomyTerm", "RSS", "sitemap", "robotsTXT", "404"]

## Other New Features

*   Add ability to sort pages by frontmatter parameters, enabling easy custom “top 10” page lists. [#3022](//github.com/spf13/hugo/issues/3022)
*   Add `truncate` template function [#2882](//github.com/spf13/hugo/issues/2882)
*   Add `now` function, which replaces the now deprecated `.Now` [#2882](//github.com/spf13/hugo/issues/2882)
*   Make RSS item limit configurable [#3035](//github.com/spf13/hugo/issues/3035)

## Enhancements

*   Enhance `.Param` to permit arbitrarily nested parameter references [#2598](//github.com/spf13/hugo/issues/2598)
*   Use `Page.Params` more consistently when adding metadata [#3033](//github.com/spf13/hugo/issues/3033)
*   The `sectionPagesMenu` feature (“Section menu for the lazy blogger”) is now integrated with the section content pages. [#2974](//github.com/spf13/hugo/issues/2974)
*   Hugo `0.19` is compiled with Go 1.8!
*   Make template funcs like `findRE` and friends more liberal in what argument types they accept [#3018](//github.com/spf13/hugo/issues/3018) [#2822](//github.com/spf13/hugo/issues/2822)
*   Improve generation of OpenGraph date tags [#2979](//github.com/spf13/hugo/issues/2979)

## Notes

*   `sourceRelativeLinks` is now deprecated and will be removed in Hugo `0.21` if no one is stepping up to the plate and fixes and maintains this feature. [#3028](//github.com/spf13/hugo/issues/3028)

## Fixes

*   Fix `.Site.LastChange` on sites where the default sort order is not chronological. [#2909](//github.com/spf13/hugo/issues/2909)
*   Fix regression of `.Truncated` evaluation in manual summaries. [#2989](//github.com/spf13/hugo/issues/2989)
*   Fix `preserveTaxonomyNames` regression [#3070](//github.com/spf13/hugo/issues/3070)
*   Fix issue with taxonomies when only some have content page [#2992](//github.com/spf13/hugo/issues/2992)
*   Fix instagram shortcode panic on invalid ID [#3048](//github.com/spf13/hugo/issues/3048)
*   Fix subtle data race in `getJSON` [#3045](//github.com/spf13/hugo/issues/3045)
*   Fix deadlock in cached partials [#2935](//github.com/spf13/hugo/issues/2935)
*   Avoid double-encoding of paginator URLs [#2177](//github.com/spf13/hugo/issues/2177)
*   Allow tilde in URLs [#2177](//github.com/spf13/hugo/issues/2177)
*   Fix `.Site.Pages` handling on live reloads [#2869](//github.com/spf13/hugo/issues/2869)
*   `UniqueID` now correctly uses the fill file path from the content root to calculate the hash, and is finally … unique!
*   Discard current language based on `.Lang()`, go get translations correct for paginated pages. [#2972](//github.com/spf13/hugo/issues/2972)
*   Fix infinite loop in template AST handling for recursive templates [#2927](//github.com/spf13/hugo/issues/2927)
*   Fix issue with watching when config loading fails [#2603](//github.com/spf13/hugo/issues/2603)
*   Correctly flush the imageConfig on live-reload [#3016](//github.com/spf13/hugo/issues/3016)
*   Fix parsing of TOML arrays in frontmatter [#2752](//github.com/spf13/hugo/issues/2752)

## Docs

*   Add tutorial “How to use Google Firebase to host a Hugo site” [#3007](//github.com/spf13/hugo/issues/3007)
*   Improve documentation for menu rendering [#3056](//github.com/spf13/hugo/issues/3056)
*   Revise GitHub Pages deployment tutorial [#2930](//github.com/spf13/hugo/issues/2930)</releaseNotes>
    <packageSourceUrl>https://github.com/chantisnake/chocolateyPackage</packageSourceUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <licenseUrl>https://github.com/spf13/hugo/blob/master/LICENSE.md</licenseUrl>
    <bugTrackerUrl>https://github.com/spf13/hugo/issues</bugTrackerUrl>
    <projectSourceUrl>https://github.com/spf13/hugo</projectSourceUrl>
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
    <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
  </files>
</package>